snippet #! "go file initial framework" b
package ${1:main}

import (
    "${2:fmt}"
)

func main() {
    $0
}
endsnippet

snippet fun "func() {...}" b
func ${1:main}(${2:arg1, ...}) ${3:int} {
    $4
}$0
endsnippet

snippet mth "method declaration" b
func (${1:t} ${2:[*] T}) ${3:Foo}(${4:arg1, ...}) ${5:int} {
    ${6}
}$0
endsnippet

snippet pf "fmt.Printf" b
fmt.Printf("$1"$2)$0
endsnippet

snippet pl "fmt.Println(...)" i
fmt.Println(${1:"$2"})$0
endsnippet

snippet for "for statement" b
for ${1:${2:i} := 0}; ${3:$2 != ${4}}; ${5:${6:$2}++} {
    $7
}$0
endsnippet

snippet "(\*)?(\w+)\.(\w+)(.*)" "smart method declaration" br
`!p
Receiver = 'ptr' if match.group(1) else 'obj'
Star = '* ' if match.group(1) else ''
Type = match.group(2)
Name = match.group(3)
Other = match.group(4) or '()'
`
func (${1:`!p snip.rv = Receiver`} `!p snip.rv = Star`${3:`!p snip.rv = Type`}) `!p snip.rv = Name`${4:`!p snip.rv = Other`} $5{
    $0
}
endsnippet
